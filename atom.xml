<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://tickltock.github.io</id>
    <title>TickTock&apos;Blog</title>
    <updated>2022-03-24T07:17:19.696Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://tickltock.github.io"/>
    <link rel="self" href="https://tickltock.github.io/atom.xml"/>
    <subtitle>我的博客</subtitle>
    <logo>https://tickltock.github.io/images/avatar.png</logo>
    <icon>https://tickltock.github.io/favicon.ico</icon>
    <rights>All rights reserved 2022, TickTock&apos;Blog</rights>
    <entry>
        <title type="html"><![CDATA[yay安装失败的解决方案]]></title>
        <id>https://tickltock.github.io/post/8DXfwMpGg/</id>
        <link href="https://tickltock.github.io/post/8DXfwMpGg/">
        </link>
        <updated>2022-03-24T06:36:06.000Z</updated>
        <summary type="html"><![CDATA[<p>由于众所周知的原因，国内网络无法正常安装yay，故写下此篇文章。<br>
希望这篇文章为安装yay提供参考，避免踩坑。</p>
]]></summary>
        <content type="html"><![CDATA[<p>由于众所周知的原因，国内网络无法正常安装yay，故写下此篇文章。<br>
希望这篇文章为安装yay提供参考，避免踩坑。</p>
<!-- more -->
<h2 id="常规安装方法">常规安装方法</h2>
<pre><code class="language-shell">git clone https://aur.archlinux.org/yay
cd yay
makepkg -si
</code></pre>
<p>通常情况执行完上面所示命令即可安装成功，但是经常会遇到网络错误的情况，主要原因有如下两点</p>
<ul>
<li>go语言的软件安装源被屏蔽</li>
<li>github访问受限<br>
所以解决思路要么采取科学上网软件，或者采取我以下所说的方法。</li>
</ul>
<h2 id="解决方案">解决方案</h2>
<ol>
<li>
<p>go语言换源<br>
本文采用Goproxy.cn源，官网有换源方法，这里也贴出来</p>
<ol>
<li>换源</li>
</ol>
<pre><code class="language-shell">go env -w GO111MODULE=on
go env -w GOPROXY=https://goproxy.cn,direct
</code></pre>
<ol start="2">
<li>
<p>使更换的源生效</p>
<ul>
<li>临时生效</li>
</ul>
<pre><code class="language-shell">export GO111MODULE=on
export GOPROXY=https://goproxy.cn
</code></pre>
<ul>
<li>永久生效</li>
</ul>
<pre><code class="language-shell">echo &quot;export GO111MODULE=on&quot; &gt;&gt; ~/.profile
echo &quot;export GOPROXY=https://goproxy.cn&quot; &gt;&gt; ~/.profile
source ~/.profile
</code></pre>
</li>
</ol>
</li>
</ol>
<p>完成以上步骤以后，可以再次尝试</p>
<pre><code class="language-shell">makepkg -si
</code></pre>
<p>若还存在网络问题可以继续往下看，修改hosts</p>
<ol>
<li>修改hosts访问github<br>
本文采用的gitee找到的github hosts<br>
github hosts如下:</li>
</ol>
<pre><code># GitHub Host Start
185.199.108.154              github.githubassets.com
140.82.112.22                central.github.com
185.199.108.133              desktop.githubusercontent.com
185.199.108.153              assets-cdn.github.com
185.199.108.133              camo.githubusercontent.com
185.199.108.133              github.map.fastly.net
199.232.69.194               github.global.ssl.fastly.net
140.82.114.3                 gist.github.com
185.199.108.153              github.io
140.82.113.3                 github.com
140.82.112.5                 api.github.com
185.199.108.133              raw.githubusercontent.com
185.199.108.133              user-images.githubusercontent.com
185.199.108.133              favicons.githubusercontent.com
185.199.108.133              avatars5.githubusercontent.com
185.199.108.133              avatars4.githubusercontent.com
185.199.108.133              avatars3.githubusercontent.com
185.199.108.133              avatars2.githubusercontent.com
185.199.108.133              avatars1.githubusercontent.com
185.199.108.133              avatars0.githubusercontent.com
185.199.108.133              avatars.githubusercontent.com
140.82.112.10                codeload.github.com
52.217.207.1                 github-cloud.s3.amazonaws.com
52.216.78.4                  github-com.s3.amazonaws.com
52.217.194.169               github-production-release-asset-2e65be.s3.amazonaws.com
52.216.131.131               github-production-user-asset-6210df.s3.amazonaws.com
52.216.28.204                github-production-repository-file-5c1aeb.s3.amazonaws.com
185.199.108.153              githubstatus.com
64.71.144.202                github.community
185.199.108.133              media.githubusercontent.com
​
# Please Star : https://github.com/ineo6/hosts
# Mirror Repo : https://gitee.com/ineo6/hosts
# Update at: 2021-12-01 08:39:41
​
# GitHub Host End
</code></pre>
<p>修改hosts</p>
<pre><code class="language-shell">$ sudo vim /etc/hosts
</code></pre>
<p>将以上github host内容追加到/etc/hosts文件中<br>
使更新的hosts立即生效</p>
<pre><code class="language-shell">$ sudo systemctl restart nscd
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[SAS总结]]></title>
        <id>https://tickltock.github.io/post/DgT6_5f8r/</id>
        <link href="https://tickltock.github.io/post/DgT6_5f8r/">
        </link>
        <updated>2022-03-24T00:55:36.000Z</updated>
        <summary type="html"><![CDATA[<p>记录使用SAS过程中遇到的各种问题</p>
]]></summary>
        <content type="html"><![CDATA[<p>记录使用SAS过程中遇到的各种问题</p>
<!-- more -->
<h2 id="总结">总结</h2>
<ol>
<li>put可用于输出变量值，方便调试程序。如:put a=;或put (a) (=)。put a[<em>]=;或put (a[</em>]) (=)可打印数组值</li>
<li>%put用于宏变量，输出宏变量的值，如:</li>
</ol>
<pre><code class="language-{SAS}">%let a=&quot;a&quot;;
%put &amp;a.;
output:&quot;a&quot;
%put &amp;=a.;
output:A=&quot;a&quot;
</code></pre>
<ol>
<li>
<p>SAS系统设置 options</p>
<ul>
<li>mprint    打印生成的宏语句</li>
<li>symbolgen 解析生成的宏变量</li>
<li>mfile     指定后mprint可打印相应log</li>
</ul>
</li>
<li>
<p>SAS使用first或last的时候，要注意data步里的筛选语句，否则可能导致错误</p>
</li>
<li>
<p>SAS中<strong>informat</strong>和<strong>format</strong>分别控制<strong>输入时的格式</strong>和<strong>数据展示的值</strong></p>
<ul>
<li>例如:proc format; invalue $sex '男'=1 '女'=2;那么采用input转换，或者input输入原始值的时候，'男'或'女'会被替换成1或2。</li>
<li><strong>特别注意</strong>：若数据集变量已经为'男'或'女'，即使在数据集指定了informat，也不会改变其原始值，因为数据已经存在，而不是输入进去的，不会触发informat格式。</li>
<li>format则相当于一种key-value映射，不过得区分put(xxx,format)和直接指定format，前者会直接赋值转换后的真实值，后者才是真实的format，即key-value映射。</li>
</ul>
</li>
<li>
<p>SAS使用正则表达式元字符&quot;<span class='katex-error' title='ParseError: KaTeX parse error: Undefined control sequence: \s at position 23: …匹配不上的情况，需要在前面加上\̲s̲*，即&quot;\s*'>&quot;时，可能遇到匹配不上的情况，需要在前面加上\s*，即&quot;\s*</span>&quot;，才能匹配到结果。</p>
</li>
</ol>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[AutoHotKey总结]]></title>
        <id>https://tickltock.github.io/post/IxYmoBLq0/</id>
        <link href="https://tickltock.github.io/post/IxYmoBLq0/">
        </link>
        <updated>2022-03-24T00:51:56.000Z</updated>
        <summary type="html"><![CDATA[<p>记录使用AutoHotKey所遇到的各种问题</p>
]]></summary>
        <content type="html"><![CDATA[<p>记录使用AutoHotKey所遇到的各种问题</p>
<!-- more -->
<h2 id="总结">总结</h2>
<ol>
<li>
<p>AHK在Send文本时，无法直接发送!=字符，需要注意</p>
</li>
<li>
<p>Clipboard为空时，ClipWait才会生效，且ClipWait第2个参数为1时，才会等待除文本或文件之外的其他类型数据</p>
</li>
</ol>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[我的博客开通咯~🎉]]></title>
        <id>https://tickltock.github.io/post/6e9GaChMX/</id>
        <link href="https://tickltock.github.io/post/6e9GaChMX/">
        </link>
        <updated>2022-03-24T00:39:23.000Z</updated>
        <summary type="html"><![CDATA[<p>👏欢迎来到我的博客，在这里我会分享和记录自己的生活⛱、知识📖、创意💡...</p>
]]></summary>
        <content type="html"><![CDATA[<p>👏欢迎来到我的博客，在这里我会分享和记录自己的生活⛱、知识📖、创意💡...</p>
<!-- more -->
<h2 id="建站方式">建站方式</h2>
<p>建站采用Github Page+Gridea</p>
<h2 id="优点">优点</h2>
<ol>
<li>
<p>只需要专注于内容，而不需要关注其他的细节部分</p>
</li>
<li>
<p>可选择已有的主题或自行编写</p>
</li>
</ol>
]]></content>
    </entry>
</feed>